# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest
  
#container: centos:7

stages:
- stage: provisioning_stage_A
  jobs:
  - job: A1
    steps:
    - script:
        yum -y update
        yum -y install java-1.8.0-openjdk-devel
        curl https://downloads.lightbend.com/scala/2.12.10/scala-2.12.10.rpm --output scala-2.12.10.rpm
        yum -y install scala-2.12.10.rpm
        curl https://bintray.com/sbt/rpm/rpm | tee /etc/yum.repos.d/bintray-sbt-rpm.repo
        yum -y install sbt
        yum install -y git
        yum install -y which
        yum install -y yum-utils
        yum -y install rpm-build
        yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
        yum install -y docker-ce docker-ce-cli containerd.io
- stage: build_stage_B
  jobs:
  - job: B1
    displayName: initial_job
    steps: 
    - script: 
        cd proyecto-gcs
        sbt compile
- stage: test_stage_C
  jobs:
  - job: A1
    steps:
    - script: 
        sbt test
        sudo systemctl start docker
        sudo docker run -it -e POSTGRES_PASSWORD=gcs -e POSTGRES_USER=gcs -e POSTGRES_DB=gcs -p 127.0.0.1:5432:5432  postgres:9.5
        sbt "project gcsAppIT" test
- stage: packaging_stage_D
  jobs:
  -  job: D1
     displayName: initial_job
     steps: 
     - script: 
        sbt rpm:packageBin
- stage: deploy_stage_F
  jobs:
  - job: F1
    steps:
    - script: 
        (Comando para copiar el archivo al servidor)
        sudo systemctl stop gcs-app
        sudo rpm -e gcs-app
        sudo rpm -i gcs-app-2.8.x-1.noarch.rpm
        sudo chown -R gcs-app /usr/share/gcs-app/
        sudo chgrp -R gcs-app /usr/share/gcs-app/
        (Realizar los cambios en el archivo de configuration localizado en /etc/gcs-app/application.conf)
        sudo systemctl start gcs-app


